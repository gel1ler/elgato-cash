datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Worker {
  id       Int     @id @default(autoincrement())
  name     String
  role     String  // 'master' | 'admin'
  category String?
  active   Boolean @default(true)
  salaryRate Decimal @default(0.5)

  // Relations
  serviceEntries ServiceEntry[]
  payouts        Payout[]
  tips           Tip[]
  adminForShifts Shift[]       @relation("AdminOfShift")
}

model Shift {
  id           Int       @id @default(autoincrement())
  shiftDate    DateTime
  openingCash  Decimal    @default(0)
  closingCash  Decimal?
  createdAt    DateTime   @default(now())
  adminId      Int?
  admin        Worker?    @relation("AdminOfShift", fields: [adminId], references: [id])

  serviceEntries ServiceEntry[]
  productSales   ProductSale[]
  payouts        Payout[]
  tips           Tip[]
}

model ServiceEntry {
  id        Int      @id @default(autoincrement())
  service   String
  amount    Decimal
  method    String   // 'cash' | 'noncash' | 'transfer' | 'sbp'
  createdAt DateTime @default(now())

  shiftId   Int
  shift     Shift    @relation(fields: [shiftId], references: [id])
  workerId  Int
  worker    Worker   @relation(fields: [workerId], references: [id])
}

model ProductSale {
  id        Int      @id @default(autoincrement())
  product   String
  amount    Decimal
  method    String   // 'cash' | 'noncash' | 'transfer' | 'sbp'
  createdAt DateTime @default(now())

  shiftId   Int
  shift     Shift    @relation(fields: [shiftId], references: [id])
}

model Payout {
  id        Int      @id @default(autoincrement())
  amount    Decimal
  note      String?
  createdAt DateTime @default(now())

  shiftId   Int
  shift     Shift    @relation(fields: [shiftId], references: [id])
  workerId  Int?
  worker    Worker?  @relation(fields: [workerId], references: [id])
}

model Tip {
  id        Int      @id @default(autoincrement())
  amount    Decimal
  createdAt DateTime @default(now())

  shiftId   Int
  shift     Shift    @relation(fields: [shiftId], references: [id])
  workerId  Int
  worker    Worker   @relation(fields: [workerId], references: [id])

  @@unique([shiftId, workerId])
}